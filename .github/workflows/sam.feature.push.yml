on:
  push:
    branches:
      - "feature/**"

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Set up SAM
        uses: aws-actions/setup-sam@v1

#      - name: Set up AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build SAM
        run: sam build --use-container

      # TODO: Add tests
      # - name: Install dependencies and run unit tests
      #   run: |
      #     pip3 install -r dependencies/requirements.txt
      #     pip3 install -r tests/requirements.txt
      #     coverage run --source=functions/ -m pytest tests/ -v -rap --junitxml target/pytest-coverage/testreport-delay-authentication.xml
      #     coverage xml -o target/pytest-coverage/coverage-delay-authentication.xml

  # unit-tests:
  #   name: Run unit tests
  #   needs: build
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Git checkout
  #       uses: actions/checkout@v2

  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: sam-app

  #     - name: Set up Python 3.9
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.9"

  #     - name: Install dependencies and run unit tests
  #       run: |
  #         pip3 install -r dependencies/requirements.txt
  #         pip3 install -r tests/requirements.txt
  #         coverage run --source=functions/ -m pytest tests/ -v -rap --junitxml target/pytest-coverage/testreport-delay-authentication.xml
  #         coverage xml -o target/pytest-coverage/coverage-delay-authentication.xml

  sonarcloud:
    name: SonarCloud analysis
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Sonarcloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}